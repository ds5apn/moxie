## settings.moxie

### Proxies
Moxie automatically uses all proxy definitions from your local Maven settings
(~/.m2/settings.xml) and also from your local Moxie settings
(~/.moxie/settings.moxie).

Unlike Maven, which assumes you will proxy everything and requires
you to manually exclude hostnames (i.e. opt-out), Moxie allows you
to specify what repositories will be proxied by a proxy definition
(i.e. opt-in). If this is undesirable, Moxie also supports Maven-style
opt-out proxy definitions too. 

If you want Moxie proxy settings, copy and edit the following example
opt-in proxy definition to a new text file: ~/.moxie/settings.moxie

#### example standard network proxy configuration
%BEGINMAXML%
- { id: myproxy, active: false, protocol: http, host:proxy.somewhere.com, port:8080, username: proxyuser, password: somepassword }
%ENDMAXML%

#### example Moxie Proxy configuration
only the identified repositories are proxied through this connection

%BEGINMAXML%
- { id: moxieProxy, active: false,	protocol: http, host: moxie.somewhere.com, port: 8081, username: proxyuser, password: somepassword, repositories: "central, mavencentral, restlet, codehaus" }
%ENDMAXML%

---NOMARKDOWN---
<pre>
Should the build immediately fail if an artifact can not be immediately
resolved from the remote repositories or the local cache?
failFastOnArtifactResolution: true

Default snapshot revision purge policy
Default minimum count of snapshot revisions to keep
minimum acceptable value is 1
revisionRetentionCount: 1

if the count of snapshot revisions exceeds the specified retention count,
then delete all snapshot revisions older than this count of days
revisionPurgeAfterDays: 0

Registered Maven 2 repositories.  This section is used to define id-url
pairs so that project descriptors can specify an repository id, rather than
a complete url.  A repository definition can override the default snapshot
revision purge policy.
registeredRepositories:
- { id: central, url: 'http://repo1.maven.org/maven2' }
- { id: mavencentral, url: 'http://repo1.maven.org/maven2' }
- { id: restlet, url: 'http://maven.restlet.org', revisionRetentionCount: 1, revisionPurgeAfterDays: 0 }
- { id: codehaus, url: 'http://repository.codehaus.org' }

Default repositories for dependency retrieval
repositories: central

Managed dependencies are used to specify versions of dependencies
if those versions are not specified in the project's build.moxie.
dependencyManagement:
- 'junit:junit:4.11'
- 'org.testng:testng:6.8'
- 'net.sourceforge.cobertura:cobertura:1.9.4.1'
- 'emma:emma:2.1.5320'
- 'org.eclipse.jgit:org.eclipse.jgit:2.2.0.201212191850-r'
- 'org.tautua.markdownpapers:markdownpapers-core:1.3.2'
- 'org.freemarker:freemarker:2.3.19'
- 'org.mozilla:rhino:1.7R4'
- 'org.jacoco:org.jacoco.ant:0.6.1.201212231917'

dependency aliases allow you to specify shorthand notation for a dependency
which will be resolved at runtime to the full coordinates.
dependencyAliases: {
	junit: 'junit:junit'
	testng: 'org.testng:testng'
	cobertura: 'net.sourceforge.cobertura:cobertura'
	emma: 'emma:emma'
	jacoco: 'org.jacoco:org.jacoco.ant'
	'mx:jgit' : 'org.eclipse.jgit:org.eclipse.jgit'
	'mx:markdownpapers' : 'org.tautua.markdownpapers:markdownpapers-core'
	'mx:rhino' : 'org.mozilla:rhino'
}

Dependency overrides are used to redefine the dependencies of released/published
POMs from other projects.  The most common use case would be to add undeclared
dependencies for old POMs or to purposefully exclude dependencies from specific scopes.

Moxie uses this feature to simplify specification of "build" scope dependencies so that
enabling Cobertura, Emma, or TestNG is as easy as adding a single build dependency.

You must declare the full coordinates of the dependency to tweak, property substitution
is prohibited.  You may specify the scopes for which your override applies.  If no scope
is specified ALL scopes are assumed.

Be careful when using dependency overrides!
dependencyOverrides: {

cobertura: redefine ant as optional for build scope
	'net.sourceforge.cobertura:cobertura:1.9.4.1' : {
		scope: build
		dependencies:
		- compile 'oro:oro:2.0.8'
		- compile 'asm:asm:3.0'
		- compile 'asm:asm-tree:3.0'
		- compile 'log4j:log4j:1.2.9'
		- compile 'org.apache.ant:ant:1.7.0' optional
	}

emma: add emma_ant dependency for build scope
    'emma:emma:2.1.5320' : {
		scope: build
		dependencies:
		- compile 'emma:emma_ant:2.1.5320'
	}
}
</pre>
---NOMARKDOWN---